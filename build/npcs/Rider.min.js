function lengthdir_x(length, angle) {
	return length * Number(Math.cos(toRadians(angle))).toFixed(2) * -1;
}

function lengthdir_z(length, angle) {
	return length * Number(Math.sin(toRadians(angle))).toFixed(2);
}

function toRadians(angle) {
  return angle * (Math.PI / 180);
}

function sign(num) {
	if(typeof(num) == typeof(undefined)) { num = 0; }
	if(num > 0) { return 1; }
	if(num < 0) { return -1; }
	return 0;
}

function fixAngle(angle) {
	return Number((Math.abs(angle) % 360) * sign(angle)).toFixed(2);
}

function posdir(pos, dir, pitch, len, flying) {
	if(typeof(dir) == typeof(undefined)) { dir = 0; }
	if(typeof(pitch) == typeof(undefined)) { pitch = 0; }
	if(typeof(len) == typeof(undefined)) { len = 1; }
	if(typeof(flying) == typeof(undefined)) { flying = false; }
	var x = pos.getX();
	var y = pos.getY();
	var z = pos.getZ();
	var xdir = getQuartRotation(dir);
	var zdir = getQuartRotation(dir-90);
	x += Math.round(len*(Math.abs(xdir)/90)*sign(xdir));
	z += Math.round(len*(Math.abs(zdir)/90)*sign(zdir));
	if(flying) {
		y += (len)*(Math.abs(pitch)/90)*-sign(pitch);
	}
	return {x:x,y:y,z:z};
}

function lengthpitch_y(pitch, length) {
	return Math.round(pitch/-90)*length;
}

function getQuartRotation(dir) {
	dir = getHalfRotation(dir);

	if(Math.abs(dir) > 90) {
		dir = (180-Math.abs(dir))*sign(dir);
	}

	return dir;
}

function getHalfRotation(angle) {
	angle = fixAngle(angle);
	if(angle <= 180) { return angle; } else { return -(180-(angle-180)); }
}


function init(e){
	
	(function(e){
		e.npc.getAi().setAttackInvisible(true);
		var stats = e.npc.getStats();
		stats.setImmune(0, true);
		stats.setImmune(1, false);
		stats.setImmune(2, false);
		stats.setImmune(3, true);
		stats.setImmune(4, true);
		stats.setImmune(5, true);
		e.npc.addPotionEffect(1, 99999, 100, true);
	})(e);

}


function load(e) {
	
}

function interact(e){
	
	if(e.npc.getAllRiders().length == 0) {
        e.npc.addRider(e.player);
    }
}

function timer(e){
	
}

function tick(e){
	
	(function(e){
		var w = e.npc.world;
		if(getDayTime(w.getTime()) < 100 && newDayInit == false) {
			if(typeof(newDay) != typeof(undefined)) {
				newDay(e);
			}
			newDayInit = true;
		}
		if(getDayTime(w.getTime()) >= 100 && newDayInit == true) {
			newDayInit = false;
		}
	})(e);

	var rid = e.npc.getAllRiders();
    if(rid.length >= 1) {
		if(rid[0].getType() == 1) {
			var ridrot = rid[0].getRotation();
			e.npc.setRotation(ridrot);
			var mf = rid[0].getMoveForward();
			if(mf != 0) {
				e.npc.setMotionX(lengthdir_x(2, ridrot)*-sign(mf));
				e.npc.setMotionZ(lengthdir_z(2, ridrot)*sign(mf));
			}
			var mv = rid[0].getMoveVertical();
		}
    }
}

function collide(e){
	
}

function damaged(e){
	
}

function died(e){
	
}

function kill(e){
	
}

function meleeAttack(e){
	
}

function rangedAttack(e){
	
}

function target(e){
	
}

function targetLost(e){
	
}

function role(e){
	
}
